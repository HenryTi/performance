-- 	state TINYINT DEFAULT 0, 	-- 0:初建，10:待办，20:在办，30:已办，40:完成，50:取消

TUID TodoTemplet (
	id,
	main discription TEXT,
	due SMALLINT DEFAULT -1,	-- 预估时间分钟
	rate TINYINT DEFAULT 0,		-- 评级, 0=一般，1=难
	owner ID [$User],
	project ID Project,
	x TINYINT DEFAULT 0,
);

TUID Task (
	id,
	main caption CHAR(100),
	main discription TEXT,
	main templet ID TodoTemplet,
	main time TIMESTAMP,
	main owner ID [$User],
	main x TINYINT DEFAULT 0,
);

TUID Todo (
	id,
	main task ID Task,
	main state TINYINT DEFAULT 0, 	-- 0:初建，10:待办，20:在办，30:已办，40:完成，50:取消
	owner ID [$User],
	time TIMESTAMP,

	-- main worker ID [$User],
	-- main templet ID TodoTemplet,
	-- due SMALLINT DEFAULT -1,	-- 预估时间分钟
	-- rate TINYINT DEFAULT 0,		-- 评级, 0=一般，1=难
	-- owner ID [$User],
	-- INDEX project_id (project, id) UNIQUE,
	-- unique (task, worker),
	-- INDEX worker_state (worker, state),
	
	INDEX task_id (task, id) UQINUE;
);

TUID Act (
	id,
	main todo ID Todo,
	main date TIMESTAMP,
	main fromState TINYINT,
	main toState TINYINT,
	-- action TINYINT,		-- 1.接受， 2.取消, 3.待办, 4.正办, 5.验收，6.返工
	-- memo TEXT,			-- 说明。想想，可能并不需要。沟通和执行中的看法应该是另外的事情。
	-- state TINYINT DEFAULT 0, 	-- 0:初建，1:待办，2:正办，3:待验收，-1:完成，-2:取消
	INDEX todo_id (todo, id) UNIQUE,
);

TUID Assess (
	id _,			-- share id with todo
	assessor ID [$User],
	timeSpend SMALLINT DEFAULT -1,		-- 实际时间成本分钟
	outcomeRate TINYINT DEFAULT -1,		-- 完成评分，用点赞数表达。0表示普通完成，1表示一个赞，可以给10个赞
	startTime TIMESTAMP,
	endTime TIMESTAMP,
);

ACTION TaskTodo(
	[group] ID,
	todoTemplet ID TodoTemplet
)
RETURNS ret (
	note ID,
	task ID
){
	VAR note ID, task ID;
	TUID Task INTO task SET templet=todoTemplet;
	TUID Note INTO note SET [group]=[group], content=null, owner=$user, type=1, obj=task;
	FOREACH (VAR member ID OF SELECT a.member FROM GroupMember as a WHERE a.[group]=[group]) {
		IF member<>$user {
			BOOK MyGroup at(member, [group]) SET time=$date, unread+=1;
		}
	}
	INTO ret SELECT note, task;
};

ACTION RemoveTask (
	note ID,
	task ID
) {
	TUID note ID note SET x=1;
	TUID Task ID task SET x=1;
};

ACTION TaskAct (
	task ID,
	toState TINYINT
)
RETURNS ret (
	todo ID,
	act ID,
	worker ID,
) {
	VAR todoId ID, actId ID;
	TUID Todo INTO todoId UNIQUE(task, $user) SET state=toState, time=$date;
	TUID Act INTO actId SET todo=todoId, date=$date, fromState=0, toState=toState;
	INTO ret SELECT todoId as todo, actId as act, $user as worker;
};

ACTION TodoAct (
	todoId ID,
	toState TINYINT
) {
	VAR stateId ID, actId ID;
	SET stateId=state FROM Todo WHERE id=todoId;
	TUID Act INTO actId SET todo=todoId, date=$date, fromState=stateId, toState=toState;
	TUID Todo ID todoId SET state=toState, time=$date;
};

QUERY GetTodo (
	taskId ID,
	todoId ID,
)
RETURNS retTodo (
	id ID,
	task ID Task,
	worker ID [$User],
	state TINYINT,
	-- templet ID TodoTemplet,
) 
RETURNS acts (
	id ID,
	todo ID Todo,
	date TIMESTAMP,
	fromState TINYINT,
	toState TINYINT,
) 
RETURNS assess (
	id ID,
	assessor ID [$User],
	timeSpend SMALLINT,		-- 实际时间成本分钟
	outcomeRate TINYINT,		-- 完成评分，用点赞数表达。0表示普通完成，1表示一个赞，可以给10个赞
	startTime TIMESTAMP,
	endTime TIMESTAMP,
) {
	if todoId IS NULL {
		SET todoId=id FROM Todo WHERE task=taskId and worker=$user;
	}
	INTO retTodo SELECT a.id, a.task, a.worker, a.state -- , a.templet 
		FROM Todo as a
		WHERE a.id=todoId;

	INTO acts SELECT a.id, a.todo, a.date, a.fromState, a.toState
		FROM Act as a
			JOIN retTodo as b on a.todo=b.id;

	INTO assess SELECT a.id, a.assessor, a.timeSpend, a.outcomeRate, a.startTime, a.endTime
		FROM Assess as a
		WHERE a.id=todoId;
};

-- 获取待办和正办
QUERY GetMyTodos (
) 
RETURNS ret (
	id ID,
	task ID Task,
	state TINYINT, 	-- 0:初建，10:待办，20:正办，30:已办，40:完成，50:取消
	date TIMESTAMP,
) {
	INTO ret SELECT a.id, a.task, a.state,
		(SELECT date FROM Act WHERE todo=a.id ORDER BY id desc LIMIT 1) as date
		FROM Todo as a 
		WHERE a.worker=$user AND (a.state=10 OR a.state=20);
};

-- s1=30, s2=40, s3=50:全部归档
-- s3=50:全部取消
QUERY GetMyArchiveTodos (
	s1 TINYINT,
	s2 TINYINT,
	s3 TINYINT,
)
PAGE (
	id ID DESC,
	task ID Task,
	state TINYINT,
) {
	PAGE SELECT a.id, a.task, a.state 
		FROM Todo as a 
		WHERE a.worker=$user AND a.id<$pageStart AND (a.state=s1 OR a.state=s2 OR a.state=s3)
		ORDER BY a.id DESC
		LIMIT $pageSize;
};

QUERY GetUserTodos (
	user ID,
)
PAGE (
	id ID DESC,
	task ID Task,
	worker ID [$User],
	state TINYINT,
) {
	PAGE SELECT a.id, a.task, a.worker, a.state 
		FROM Todo as a 
		WHERE a.worker=user AND a.id<$pageStart;
};
