ENUM EnumNoteType (Text=0, Assign=10, Task=20, );

TUID Note (
	id,
	[group] ID [Group],
	main content TEXT,				-- obj时，额外的附加信息
	main type SMALLINT DEFAULT 0,	-- EnumNoteType
	main obj ID,					-- 对应的obj id
	owner ID [$User],
	x TINYINT DEFAULT 0,
	stamp (create),	
	index group_id ([group], id) unique,
);

ACTION PushNote ver 1.2 (
	[group] ID, 
	content TEXT,
	type TINYINT,
	obj ID)
RETURNS ret (
	note ID
){
	VAR note ID;
	IF type is null {
		SET type=EnumNoteType.Text;
	}
	TUID Note INTO note SET [group]=[group], content=content, type=type, obj=obj, owner=$user;
	FOREACH (VAR member ID OF SELECT a.member FROM GroupMember as a WHERE a.[group]=[group]) {
		BOOK MyGroup at(member, [group]) SET time=$date, unread+=1;
		TUID [$User] ID (member) SET poke=1;
	}
	INTO ret SELECT note;
};

QUERY GetGroupNotes([group] ID [Group])
PAGE (
	id ID desc,
	content TEXT,
	owner ID,
	type TINYINT,
	obj ID,
	[$create] DATETIME,
	x TINYINT,
) 
RETURNS assigns (
	assignId ID,
	caption CHAR(100),
	discription TEXT,
	time TIMESTAMP,
	owner ID
)
RETURNS tasks (
	taskId ID,
	assignId ID,
	caption CHAR(100),
	discription TEXT,
)
{
	BOOK MyGroup AT($user, [group]) SET unread=0, time=now();
	PAGE SELECT a.id, a.content, a.owner, a.[$create], a.type, a.obj, a.x
		FROM Note as a
		WHERE a.[group]=[group] and a.id<$pageStart
		ORDER BY a.id desc
		LIMIT $pageSize;

	INTO assigns SELECT b.id as assignId, b.caption, b.discription
		, b.[$update] as time
		, b.owner
		FROM $Page as a
			JOIN Assign as b on a.type=EnumNoteType.Assign and a.obj=b.id;

	INTO tasks SELECT b.id as taskId, b.assign as assignId, c.caption, c.discription
		FROM $Page as a
			JOIN Task as b on a.type=EnumNoteType.Task and a.obj=b.id
			JOIN Assign as c on b.assign=c.id;
};
